{"name": "test_login_missing_fields[password]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидаю 400 код password, получаю 504\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code", "trace": "self = <tests.test_login_courier.TestLoginCourier object at 0x103cd1340>\ngenerate_random_string = <function generate_random_string.<locals>._generate_random_string at 0x103cf5a80>, missing_field = 'password'\n\n    @pytest.mark.xfailed\n    @pytest.mark.parametrize(\"missing_field\", [\"login\", \"password\"])\n    def test_login_missing_fields(self, generate_random_string, missing_field):\n        with allure.step(\n            f\"Ошибка при отсутствии обязательных полей\"\n        ):\n            data = {\n                \"login\": generate_random_string(10),\n                \"password\": generate_random_string(10)\n        }\n    \n        del data[missing_field]\n    \n        response = requests.post(LOGIN_URL, json=data)\n    \n>       assert response.status_code == 400, f\"Ожидаю 400 код {missing_field}, получаю {response.status_code}\"\nE       AssertionError: Ожидаю 400 код password, получаю 504\nE       assert 504 == 400\nE        +  where 504 = <Response [504]>.status_code\n\ntests/test_login_courier.py:57: AssertionError"}, "steps": [{"name": "Ошибка при отсутствии обязательных полей", "status": "passed", "start": 1727530348367, "stop": 1727530348367}], "parameters": [{"name": "missing_field", "value": "'password'"}], "start": 1727530348367, "stop": 1727530408597, "uuid": "1125a3b5-41c0-4e7b-80e2-5de1c6b050dd", "historyId": "82c90e035c4ed55ed0c3b24b87e9c790", "testCaseId": "fcdc0769e2eff36f4f35d58f2fd14f80", "fullName": "tests.test_login_courier.TestLoginCourier#test_login_missing_fields", "labels": [{"name": "tag", "value": "xfailed"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "falcon.local"}, {"name": "thread", "value": "9786-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_courier"}]}